#!/bin/bash
# postinst script for confab-videobridge

set -e

case "$1" in
    configure)

        CONFIG="/etc/confab/videobridge/config"

        # we don't want to regenerate config on upgrade
        OLDCONFIG="false"
        # migrate any old config found
        if [ -f "/etc/default/confab-videobridge" ]; then
            mv /etc/default/confab-videobridge $CONFIG
        fi

        if [ -f $CONFIG ]; then
            . $CONFIG
            if [ -n "$JVB_HOSTNAME" ] && [ -n "$JVB_PORT" ] && [ -n "$JVB_SECRET" ]; then
                OLDCONFIG="true"
            fi
        fi

        # debconf hostname question
        . /usr/share/debconf/confmodule

        # the default vars
        db_get confab-videobridge/jvb-hostname
        JVB_HOSTNAME_IN=$(echo "$RET" | xargs echo -n)

        # generate config on new install or when we are reconfiguring
        # and all install is different than current one
        if [ "$OLDCONFIG" = "false" ] || [ "$JVB_HOSTNAME" != "$JVB_HOSTNAME_IN" ]; then

            JVB_HOSTNAME="$JVB_HOSTNAME_IN"
            if [ "$OLDCONFIG" = "false" ]; then
                # 8-chars random secret, alternative to pwgen 8
                JVB_SECRET=`head -c 8 /dev/urandom | tr '\0-\377' 'a-zA-Z0-9a-zA-Z0-9a-zA-Z0-9a-zA-Z0-9@@@@####'`
            fi
            JVB_PORT=5347

            # storing default for later use by Confabbox and other packages
            echo '# Confab Videobridge settings' > $CONFIG
            echo >> $CONFIG
            echo '# sets the XMPP domain (default: none)' >> $CONFIG
            echo "JVB_HOSTNAME=$JVB_HOSTNAME" >> $CONFIG
            echo >> $CONFIG
            echo '# sets the hostname of the XMPP server (default: domain if set, localhost otherwise)' >> $CONFIG
            echo "JVB_HOST=" >> $CONFIG
            echo >> $CONFIG
            echo '# sets the port of the XMPP server (default: 5275)' >> $CONFIG
            echo "JVB_PORT=$JVB_PORT" >> $CONFIG
            echo >> $CONFIG
            echo '# sets the shared secret used to authenticate to the XMPP server' >> $CONFIG
            echo "JVB_SECRET=$JVB_SECRET" >> $CONFIG
            echo >> $CONFIG

        fi

        # Store it, so we can use it if xmpp server is on same machine
        # we are currently doing this on every upgrade in order to be able to successfully upgrade
        # from old packages, otherwise we can do it only when secret is first time generated
        db_set confab-videobridge/jvbsecret $JVB_SECRET

        # and we're done with debconf
        db_stop

        OLD_CONFAB_CONFIG="/usr/share/confab-videobridge/.sip-communicator/sip-communicator.properties"
        NEW_CONFAB_CONFIG="/etc/confab/videobridge/sip-communicator.properties"
        HOCON_CONFIG="/etc/confab/videobridge/jvb.conf"

        if [ -f $OLD_CONFAB_CONFIG ]; then
            mv $OLD_CONFAB_CONFIG $NEW_CONFAB_CONFIG
            echo "# Config has moved to /etc/confab/videobridge/
# do not edit this file as it is not used" > ${OLD_CONFAB_CONFIG}.old
        elif [ ! -f $NEW_CONFAB_CONFIG ]; then
            # if sip-communicator.properties file is missing create it
            # as jvb will search for it and if cannot create it will fail starting
            touch $NEW_CONFAB_CONFIG
        fi

        # let's check whether there is a setting in the $CONFIG
        # for home folder and logging props file, if missing add it
        if ! grep -q "JAVA_SYS_PROPS" "$CONFIG"; then
            echo >> $CONFIG
            echo '# adds java system props that are passed to jvb (default are for home and logging config file)' >> $CONFIG
            echo "JAVA_SYS_PROPS=\"-Dnet.java.sip.communicator.SC_HOME_DIR_LOCATION=/etc/confab\
 -Dnet.java.sip.communicator.SC_HOME_DIR_NAME=videobridge\
 -Dnet.java.sip.communicator.SC_LOG_DIR_LOCATION=/var/log/confab\
 -Djava.util.logging.config.file=/etc/confab/videobridge/logging.properties\"" >> $CONFIG
        fi

        # Updates config so new and old installs will start using the new config file
        if ! grep -q "\-Dconfig.file" "$CONFIG"; then
            sed -i 's|JAVA_SYS_PROPS="|JAVA_SYS_PROPS="-Dconfig.file='"$HOCON_CONFIG"' |g' $CONFIG
        fi

        # unused old parameter, systemd unit files does not resolve bash variables,
        # and this breaks startup script
        sed -i 's/\$JVB_EXTRA_JVM_PARAMS//g' $CONFIG

        if ! grep -q "org.ice4j.ice.harvest.STUN_MAPPING_HARVESTER_ADDRESSES" "$NEW_CONFAB_CONFIG" \
          && ! grep -q "org.ice4j.ice.harvest.NAT_HARVESTER_PUBLIC_ADDRESS" "$NEW_CONFAB_CONFIG" ;then
            echo "org.ice4j.ice.harvest.DISABLE_AWS_HARVESTER=true" >> $NEW_CONFAB_CONFIG
            echo "org.ice4j.ice.harvest.STUN_MAPPING_HARVESTER_ADDRESSES=meet-jit-si-turnrelay.confab.net:443" >> $NEW_CONFAB_CONFIG
        fi

        if ! grep -q "#org.confab.videobridge.AUTHORIZED_SOURCE_REGEXP" "$NEW_CONFAB_CONFIG" ;then
            sed -i 's/org.confab.videobridge.AUTHORIZED_SOURCE_REGEXP/#org.confab.videobridge.AUTHORIZED_SOURCE_REGEXP/g' $NEW_CONFAB_CONFIG
        fi

        if ! grep -q "org.confab.videobridge.xmpp.user.shard.MUC_JIDS" "$NEW_CONFAB_CONFIG" ;then
            echo "org.confab.videobridge.ENABLE_STATISTICS=true" >> $NEW_CONFAB_CONFIG
            echo "org.confab.videobridge.STATISTICS_TRANSPORT=muc" >> $NEW_CONFAB_CONFIG
            echo "org.confab.videobridge.xmpp.user.shard.HOSTNAME=localhost" >> $NEW_CONFAB_CONFIG
            echo "org.confab.videobridge.xmpp.user.shard.DOMAIN=auth.$JVB_HOSTNAME" >> $NEW_CONFAB_CONFIG
            echo "org.confab.videobridge.xmpp.user.shard.USERNAME=jvb" >> $NEW_CONFAB_CONFIG
            echo "org.confab.videobridge.xmpp.user.shard.PASSWORD=$JVB_SECRET" >> $NEW_CONFAB_CONFIG
            echo "org.confab.videobridge.xmpp.user.shard.MUC_JIDS=JvbBrewery@internal.auth.$JVB_HOSTNAME" >> $NEW_CONFAB_CONFIG
            echo "org.confab.videobridge.xmpp.user.shard.MUC_NICKNAME=$(uuidgen)" >> $NEW_CONFAB_CONFIG
        fi

        if [ ! -f $HOCON_CONFIG ]; then
            echo "Generating an empty hocon config"
            echo "videobridge {
    http-servers {
        public {
            port = 9090
        }
    }
    websockets {
        enabled = true
        domain = \"$JVB_HOSTNAME:443\"
        tls = true
    }
}" >> $HOCON_CONFIG
        fi

        APIS_VALUE=$(grep -v '^\s*#' $CONFIG | grep -oPe '--apis=\K(\w*,*\w*)' || true)
        if [[ $APIS_VALUE == *"xmpp"* ]]; then
            APIS_NEW_VALUE=${APIS_VALUE/xmpp/}
            if [ -z "$APIS_NEW_VALUE" ]; then
                APIS_NEW_VALUE=","
            fi
            sed -i '/^\s*#/ !s/--apis='"$APIS_VALUE"'/--apis='"$APIS_NEW_VALUE"'/g' $CONFIG
        fi
        if [ -z "$APIS_VALUE" ]; then
            # no apis setting, component is turned on by default, so let's disable it
            sed -i '/^\s*#/ !s/JVB_OPTS="/JVB_OPTS="--apis=, /g' $CONFIG
        fi

        # we don't want to start the daemon as root
        if ! getent group confab > /dev/null ; then
            groupadd confab
        fi
        if ! getent passwd jvb > /dev/null ; then
            useradd -r -g confab --shell /bin/bash --create-home -d /usr/share/confab-videobridge jvb
        fi
        if ! groups jvb | grep '\bconfab\b' > /dev/null ; then
            usermod -g confab jvb
        fi

        mkdir -p /usr/share/confab-videobridge

        # we claim the home folder of jvb in case it is owned by someone else
        OWNER=$(stat -c '%U' /usr/share/confab-videobridge)
        GROUP=$(stat -c '%G' /usr/share/confab-videobridge)
        if ! dpkg-statoverride --list /usr/share/confab-videobridge/* >/dev/null && [ "$OWNER:$GROUP" != "jvb:confab" ]; then
            chown -R jvb:confab /usr/share/confab-videobridge
            OWNER=jvb
            GROUP=confab
        fi

        CONFIG_DIR=$(dirname $CONFIG)
        if ! dpkg-statoverride --list "$CONFIG_DIR" >/dev/null; then
            chown -R jvb:confab "$CONFIG_DIR"
            chmod 750 "$CONFIG_DIR"
        fi

        # die logz
        if [ ! -d /var/log/confab ]; then
            mkdir -p /var/log/confab
        fi
        chown $OWNER:$GROUP /var/log/confab
        chmod 770 /var/log/confab
        ls /var/log/confab/jvb* 1>/dev/null 2>&1 && chown -f -R $OWNER:$GROUP /var/log/confab/jvb*
        ls /var/log/confab/jvb* 1>/dev/null 2>&1 && chmod -f -R 640 /var/log/confab/jvb*

        # ensure videobridge is not running - it will be started at the end
        if [ -d /run/systemd/system ]; then
            systemctl stop confab-videobridge2.service >/dev/null || true
        fi

        # clean up old jvb group
        if getent group jvb > /dev/null; then
            groupdel jvb
        fi

        # load the UDP buffer sizes required by the JVB. As reported in
        # https://github.com/confab/confab-videobridge/issues/461
        # OpenVZ containers do not typically allow permission to modify the
        # kernel with sysctl config values.
        sysctl --system || true

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
